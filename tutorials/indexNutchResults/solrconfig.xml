<?xml version="1.0" encoding="UTF-8" ?>
<!--=================================================================  
	Solr Simple English Text Core Configuration File
	This xml contains all of the settings required for Solr to function 
	correctly with this specific core. (lucene version, plugins import, 
	schema selection, logging, query properties ...etc).
	This file has been designed based on the Apache Solr Reference guide. 
	It has the minimum settings required to do a text index and search 
	(probably as simple as it gets.) and illustrates some important default 
	settings.
	Authors: Apache Foundation, Camilo Tejeiro 
	License: Apache V2. (Refer to root dir for all licenses)
	=================================================================-->
	
<config>

	<!-- Controls what version of Lucene various components of Solr
			adhere to. -->
	<luceneMatchVersion>5.2.1</luceneMatchVersion>

	<!-- <lib> directives: specify where Solr should look for Jars to load 
			solr plugings (ie: Analyzers, Request Handlers, etc...). -->	
	<lib dir="${solr.install.dir:../../../..}/contrib/extraction/lib" regex=".*\.jar" />
	<lib dir="${solr.install.dir:../../../..}/dist/" regex="solr-cell-\d.*\.jar" />

	<!-- Data Directory: Used to specify an alternate directory to hold all 
			index data  other than default ./data under Solr home. -->
	<dataDir>${solr.data.dir:}</dataDir>

	<!-- The DirectoryFactory to use for indexes: we are using the default 
			NRTCachingDirectoryFactory. -->
	<directoryFactory name="DirectoryFactory"
		class="${solr.directoryFactory:solr.NRTCachingDirectoryFactory}"/>

	<!-- The SchemaFactory: For defining the source for the core schema 
			configuration. We will use the classic (non-managed) schema.xml -->
	<schemaFactory class="ClassicIndexSchemaFactory"/>

	<!-- Index Config: These settings control low-level behavior of indexing -->
	<indexConfig>

		<!-- RamBufferSizeMB: Once accumulated document updates exceed 
				this much memory space (defined in megabytes), then the 
				pending updates are flushed. -->
		<ramBufferSizeMB>100</ramBufferSizeMB>

		<!-- MaxIndexingThreads: The maximum number of simultaneous 
				threads used to index documents. Once this threshold is 
				reached, additional threads will wait for the others to 
				finish. -->
		<maxIndexingThreads>8</maxIndexingThreads>
	
		<!-- LockType: The LockFactory options specify the locking 
				implementation to use. We are setting the lock type to 
				native OS file locking. If a second Solr process attempts 
				to access the directory, it will fail. -->
		<lockType>native</lockType>
	
		<!-- Lucene Infostream: To aid in advanced debugging, Lucene provides 
			an "InfoStream" of detailed information when indexing. -->
		<infoStream>true</infoStream>
	
	</indexConfig>

	<!-- The update handler mostly relates to low level information about how 
			updates are handled internally (this is different 
			from request handlers which deal with updates sent by clients). 
			Use the default high-performance update handler -->
	<updateHandler class="solr.DirectUpdateHandler2">

		<!-- Enables a transaction log, used for real-time get, durability, and
			and solr cloud replica recovery.
			"dir": the target directory for transaction logs. Defaults 
				to the solr data directory.
			"numVersionBuckets": sets the number of buckets used to keep
                track of max version values when checking for re-ordered
                updates. -->
		<updateLog>
			<str name="dir">${solr.ulog.dir:}</str>
			<int name="numVersionBuckets">${solr.ulog.numVersionBuckets:65536}</int>
		</updateLog>

		<!-- AutoCommit: Perform a hard commit automatically under certain 
				conditions. If the updateLog is enabled, then it's highly 
				recommended to have some sort of hard autoCommit to limit the 
				size. 
				Autocommit if a doc is added and 15s have passed, do not 
				open a new searcher for the new autocomitts to the index-->
		<autoCommit>
		<maxTime>${solr.autoCommit.maxTime:15000}</maxTime>
		<openSearcher>false</openSearcher>
		</autoCommit>

	</updateHandler>

	<!-- Query related settings -->
	<query>
		
		<!-- MaxBooleanClauses: Maximum number of clauses in each 
				BooleanQuery,  an exception is thrown if exceeded. -->
		<maxBooleanClauses>1024</maxBooleanClauses>


		<!-- Solr Internal Query Caches: Solr caches are associated with 
				a specific instance of an Index Searcher, a specific view 
				of an index that doesn't change during the lifetime of 
				that searcher. As long as that Index Searcher is being 
				used, any items in its cache will be valid and available 
				for reuse. Caching in Solr differs from caching in many 
				other applications in that cached Solr objects do not 
				expire after a time interval; instead, they remain valid 
				for the lifetime of the Index Searcher. -->
				
		<!-- Filter Cache: This cache is used by SolrIndexSearcher for 
				filters (DocSets) for unordered sets of all documents 
				that match a query.-->
		<filterCache class="solr.FastLRUCache"
			size="512"
			initialSize="512"
			autowarmCount="0"/>

		<!-- Query Result Cache: Caches results of searches; ordered 
				lists of document ids (DocList) based on a query, a sort, 
				and the range of documents requested. -->
		<queryResultCache class="solr.LRUCache"
			size="512"
			initialSize="512"
			autowarmCount="0"/>

		<!-- Document Cache: Caches Lucene Document objects (the stored 
				fields for each document). -->
		<documentCache class="solr.LRUCache"
			size="512"
			initialSize="512"
			autowarmCount="0"/>

		<!-- Lazy Field Loading: If true, stored fields that are not requested 
				will be loaded lazily.  This can result in a significant 
				speed improvement if the usual case is to not load all 
				stored fields, especially if the skipped fields are large 
				compressed text fields. -->
		<enableLazyFieldLoading>true</enableLazyFieldLoading>

		<!-- Result Window Size:  An optimization for use with the 
				queryResultCache.  When a search is requested, a superset of 
				the requested number of document ids are collected.  
				For example, if a search for a particular query
				requests matching documents 10 through 19, and queryWindowSize 
				is 50, then documents 0 through 49 will be collected and cached.  
				Any further requests in that range can be satisfied via the 
				cache.  -->
		<queryResultWindowSize>20</queryResultWindowSize>

		<!-- Maximum number of documents to cache for any entry in the
				queryResultCache. -->
		<queryResultMaxDocsCached>200</queryResultMaxDocsCached>

		<!-- This setting controls whether search requests for which there 
		is not a currently registered searcher should wait for a new searcher 
		to warm up (false) or proceed immediately (true) -->
		<useColdSearcher>false</useColdSearcher>

		<!-- Max Warming Searchers: Maximum number of searchers that may 
				be warming in the background concurrently.  An error is 
				returned if this limit is exceeded.-->
		<maxWarmingSearchers>2</maxWarmingSearchers>
	</query>

	<!-- Request Dispatcher: This section contains instructions for how 
			the SolrDispatchFilter should behave when processing requests 
			for this SolrCore. handleSelect is a legacy option that 
			affects the behavior of requests such as /select?qt=XXX 
			handleSelect="true" is not recommended for new users, but is 
			the default for backwards compatibility. -->
	<requestDispatcher handleSelect="false" >
		
		<!-- Request Parsing: These settings indicate how Solr Requests may 
				be parsed, and what restrictions may be placed on the 
				ContentStreams from those requests. -->
		<requestParsers enableRemoteStreaming="true"
			multipartUploadLimitInKB="2048000"
            formdataUploadLimitInKB="2048"
            addHttpRequestToContext="false"/>

		<!-- HTTP Caching: how the Solr Request Dispatcher responds to 
				HTTP Requests that include cache validation headers. Set 
				no caching related headers. -->
		<httpCaching never304="true" />

	</requestDispatcher>

	<!-- SearchHandler:  For processing Search Queries, the primary Request 
		Handler provided with Solr is "SearchHandler" It delegates to a 
		sequent of SearchComponents and supports distributed queries 
		across multiple shards -->
	<requestHandler name="/select" class="solr.SearchHandler">
		<lst name="defaults">
			<str name="echoParams">explicit</str>
			<int name="rows">10</int>
			<str name="df">default_search_field</str>
		</lst>
	</requestHandler>

	<!-- Solr Cell Update Extract Request Handler: This handler is used to 
			post binary files to Solr using Tika and have it extract 
			text from them and index them. -->
	<requestHandler name="/update/extract"
		startup="lazy"
        class="solr.extraction.ExtractingRequestHandler" >
		<lst name="defaults">
			<str name="lowernames">true</str>
			<str name="fmap.meta">ignored_</str>
		</lst>
	</requestHandler>

  <!-- Legacy config for the admin interface -->
  <admin>
    <defaultQuery>*:*</defaultQuery>
  </admin>

</config>
